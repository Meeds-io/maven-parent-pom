<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2003-2014 eXo Platform SAS.

    This file is part of eXo parent POM.

    eXo parent POM is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 3 of
    the License, or (at your option) any later version.

    eXo parent POM software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with eXo parent POM; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see <http://www.gnu.org/licenses />.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.exoplatform</groupId>
  <artifactId>maven-parent-pom</artifactId>
  <version>17-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>eXo PLF:: Parent POM</name>
  <description>Provides default project configuration for eXo projects</description>
  <url>${site.url}</url>
  <inceptionYear>2003</inceptionYear>
  <organization>
    <name>eXo Platform SAS</name>
    <url>http://www.exoplatform.com</url>
  </organization>
  <licenses>
    <license>
      <name>GNU Lesser General Public License, Version 3.0</name>
      <url>http://www.gnu.org/licenses/lgpl-3.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>exoswf</id>
      <name>eXo Platform SAS</name>
    </developer>
  </developers>
  <prerequisites>
    <maven>${maven.min.version}</maven>
  </prerequisites>
  <scm>
    <connection>scm:git:git://github.com/exoplatform/maven-parent-pom.git</connection>
    <developerConnection>scm:git:git@github.com:exoplatform/maven-parent-pom.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://fisheye.exoplatform.org/browse/maven-parent-pom</url>
  </scm>
  <issueManagement>
    <system>jira</system>
    <url>${jira.base.url}/browse/${jira.project.key}/</url>
  </issueManagement>
  <ciManagement>
    <system>jenkins</system>
    <url>${jenkins.base.url}/job/${jenkins.job.name}/</url>
  </ciManagement>
  <distributionManagement>
    <repository>
      <id>repository.exoplatform.org</id>
      <url>${exo.releases.repo.url}</url>
    </repository>
    <snapshotRepository>
      <id>repository.exoplatform.org</id>
      <url>${exo.snapshots.repo.url}</url>
    </snapshotRepository>
    <site>
      <id>repository.exoplatform.org</id>
      <url>${site.deploy.url}</url>
    </site>
  </distributionManagement>
  <properties>
    <exo.product.name>${project.name}</exo.product.name>
    <!-- **************************************** -->
    <!-- Jira Settings                            -->
    <!-- **************************************** -->
    <jira.base.url>https://jira.exoplatform.org</jira.base.url>
    <jira.project.key>PAR</jira.project.key>
    <!-- **************************************** -->
    <!-- Jenkins Settings                         -->
    <!-- **************************************** -->
    <jenkins.base.url>https://ci.exoplatform.org</jenkins.base.url>
    <jenkins.job.name>maven-parent-pom-master-ci</jenkins.job.name>
    <!-- **************************************** -->
    <!-- Sonar Settings                           -->
    <!-- **************************************** -->
    <sonar.host.url>https://sonar.exoplatform.org/</sonar.host.url>
    <!-- **************************************** -->
    <!-- Repositories URLs                        -->
    <!-- **************************************** -->
    <exo.releases.repo.url>https://repository.exoplatform.org/service/local/staging/deploy/maven2/</exo.releases.repo.url>
    <exo.snapshots.repo.url>https://repository.exoplatform.org/content/repositories/exo-snapshots</exo.snapshots.repo.url>
    <exo.public.repo.url>http://repository.exoplatform.org/public/</exo.public.repo.url>
    <!-- **************************************** -->
    <!-- Site URL                                 -->
    <!-- **************************************** -->
    <site.url>https://projects.exoplatform.org</site.url>
    <site.deploy.url>dav:${site.url}</site.deploy.url>
    <!-- **************** -->
    <!-- Plugins versions -->
    <!-- **************** -->
    <version.antrun.plugin>1.8</version.antrun.plugin>
    <version.archetype.plugin>2.4</version.archetype.plugin>
    <version.aspectj.plugin>1.8</version.aspectj.plugin>
    <version.assembly.plugin>2.6</version.assembly.plugin>
    <version.buildhelper.plugin>1.10</version.buildhelper.plugin>
    <version.buildnumber.plugin>1.4</version.buildnumber.plugin>
    <version.cargo.plugin>1.4.10</version.cargo.plugin>
    <version.clean.plugin>3.0.0</version.clean.plugin>
    <version.changes.plugin>2.11</version.changes.plugin>
    <version.checkstyle.plugin>2.17</version.checkstyle.plugin>
    <!-- PAR-398: Workaround to use it with Java 8 (To remove when 2.8 is released) -->
    <version.clirr.plugin>2.8-eXo01</version.clirr.plugin>
    <version.compiler.plugin>3.5.1</version.compiler.plugin>
    <version.copy.plugin>0.2.5</version.copy.plugin>
    <version.dependency.plugin>2.10</version.dependency.plugin>
    <version.deploy.plugin>2.8.2</version.deploy.plugin>
    <version.docck.plugin>1.1</version.docck.plugin>
    <version.docbkx.plugin>2.0.16</version.docbkx.plugin>
    <version.duplicate-finder.plugin>1.0.9</version.duplicate-finder.plugin>
    <version.eclipse.plugin>2.10</version.eclipse.plugin>
    <version.ear.plugin>2.10.1</version.ear.plugin>
    <version.ejb.plugin>2.5.1</version.ejb.plugin>
    <version.enforcer.plugin>1.4.1</version.enforcer.plugin>
    <version.exec.plugin>1.4</version.exec.plugin>
    <version.exobuild.plugin>1.2.2</version.exobuild.plugin>
    <version.exopc.plugin>1.0.5</version.exopc.plugin>
    <version.failsafe.plugin>${version.surefire.plugin}</version.failsafe.plugin>
    <version.findbugs.plugin>3.0.3</version.findbugs.plugin>
    <version.gmaven.plugin>1.5</version.gmaven.plugin>
    <version.gmavenplus.plugin>1.5</version.gmavenplus.plugin>
    <version.gpg.plugin>1.6</version.gpg.plugin>
    <!-- Must be kept in sync with maven-depmgt-pom GWT version -->
    <version.gwt.plugin>2.6.1</version.gwt.plugin>
    <version.idea.plugin>2.2.1</version.idea.plugin>
    <version.install.plugin>2.5.2</version.install.plugin>
    <version.invoker.plugin>2.0.0</version.invoker.plugin>
    <version.jacoco.plugin>0.7.6.201602180812</version.jacoco.plugin>
    <version.jar.plugin>2.6</version.jar.plugin>
    <version.javacc.plugin>2.6</version.javacc.plugin>
    <version.javadoc.plugin>2.10.3</version.javadoc.plugin>
    <version.javancss.plugin>2.1</version.javancss.plugin>
    <version.jaxb2.plugin>2.2</version.jaxb2.plugin>
    <!-- PAR-362: weaves .class files with AspectJ aspects available in classpath (binary weaving) -->
    <version.jcabi.plugin>0.14</version.jcabi.plugin>
    <version.jdepend.plugin>2.0</version.jdepend.plugin>
    <!-- PAR-222 : jdocbook 2.3.6+ has a perf issue. See MPJDOCBOOK-84 -->
    <version.jdocbook.plugin>2.3.5</version.jdocbook.plugin>
    <version.jibx.plugin>1.2.6</version.jibx.plugin>
    <version.jmeter.plugin>1.10.1</version.jmeter.plugin>
    <version.jodconverter.plugin>2.2.1</version.jodconverter.plugin>
    <version.jstools.plugin>0.7</version.jstools.plugin>
    <version.jxr.plugin>2.5</version.jxr.plugin>
    <version.lesscss.plugin>1.7.0.1.1</version.lesscss.plugin>
    <version.license.plugin>1.8</version.license.plugin>
    <version.mycila-license.plugin>2.11</version.mycila-license.plugin>
    <version.project-info-reports.plugin>2.9</version.project-info-reports.plugin>
    <!-- PAR-398: Workaround to use clirr plugin with Java 8 (To remove when clirr 2.8 is released) -->
    <version.project-info-reports-shade.plugin>1.2</version.project-info-reports-shade.plugin>
    <version.project-info-reports-bcel-findbugs.plugin>6.0</version.project-info-reports-bcel-findbugs.plugin>
    <version.plexus.plugin>1.3.8</version.plexus.plugin>
    <version.plugin.plugin>3.4</version.plugin.plugin>
    <version.pmd.plugin>3.6</version.pmd.plugin>
    <version.rar.plugin>2.4</version.rar.plugin>
    <version.release.plugin>2.5.3</version.release.plugin>
    <version.remote-resources.plugin.version>1.5</version.remote-resources.plugin.version>
    <version.resources.plugin>2.7</version.resources.plugin>
    <version.selenium.plugin>2.3</version.selenium.plugin>
    <version.shade.plugin>2.4.3</version.shade.plugin>
    <version.site.plugin>3.4</version.site.plugin>
    <version.sonar-maven-report.plugin>0.1</version.sonar-maven-report.plugin>
    <version.sortpom.plugin>2.3.1</version.sortpom.plugin>
    <version.source.plugin>3.0.0</version.source.plugin>
    <version.surefire.plugin>2.19.1</version.surefire.plugin>
    <version.taglist.plugin>2.4</version.taglist.plugin>
    <version.tomcat7.plugin>2.2</version.tomcat7.plugin>
    <version.versions.plugin>2.2</version.versions.plugin>
    <version.war.plugin>2.6</version.war.plugin>
    <version.wikbook.plugin>0.9.45</version.wikbook.plugin>
    <version.xml.plugin>1.0</version.xml.plugin>
    <version.yuicompressor.plugin>0.7.1</version.yuicompressor.plugin>
    <!-- *************** -->
    <!-- Others versions -->
    <!-- *************** -->
    <version.animal-sniffer.enforcer-rule>1.15</version.animal-sniffer.enforcer-rule>
    <version.wagon>2.7</version.wagon>
    <!-- PAR-193 : performances boost workaround -->
    <version.plexus-utils>3.0.18</version.plexus-utils>
    <!-- PAR-155 : Produce project sources package distribution -->
    <version.apache-source-release-assembly-descriptor>1.0.4</version.apache-source-release-assembly-descriptor>
    <!-- PAR-92 : Bundle used to manage file headers -->
    <version.exo-lgpl-license-resource-bundle>2</version.exo-lgpl-license-resource-bundle>
    <!-- ************** -->
    <!-- Build settings -->
    <!-- ************** -->
    <!-- Cross plugins settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!-- maven-clirr-plugin -->
    <textOutputFile>${project.build.directory}/clirr-report.txt</textOutputFile>
    <!-- maven-compiler-plugin -->
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
    <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
    <maven.compiler.optimize>true</maven.compiler.optimize>
    <!-- maven-dependency-plugin -->
    <repoUrl>${exo.public.repo.url}</repoUrl>
    <!-- maven-enforcer-plugin -->
    <maven.min.version>3.1.1</maven.min.version>
    <jdk.min.version>${maven.compiler.source}</jdk.min.version>
    <exo.release.enforce.requirePluginVersions.banSnapshots>true</exo.release.enforce.requirePluginVersions.banSnapshots>
    <!-- To configure animal-sniffer to check API compat -->
    <animal-sniffer.signature.groupId>org.codehaus.mojo.signature</animal-sniffer.signature.groupId>
    <animal-sniffer.signature.artifactId>java18</animal-sniffer.signature.artifactId>
    <animal-sniffer.signature.version>1.0</animal-sniffer.signature.version>
    <!-- Extra enforcer rules -->
    <extra-enforcer-rules.version>1.0-beta-4</extra-enforcer-rules.version>
    <!-- gmaven-plugin -->
    <gmaven-plugin.providerSelection>2.0</gmaven-plugin.providerSelection>
    <!-- maven-gpg-plugin -->
    <gpg.useagent>true</gpg.useagent>
    <!-- maven-gwt-plugin -->
    <gwt.draftCompile>false</gwt.draftCompile>
    <gwt.compiler.optimizationLevel>0</gwt.compiler.optimizationLevel>
    <gwt.compiler.disableAggressiveOptimization>true</gwt.compiler.disableAggressiveOptimization>
    <gwt.style>DETAILED</gwt.style>
    <!-- maven-idea-plugin & maven-eclipse-plugin -->
    <downloadSources>true</downloadSources>
    <!--  maven-javadoc-plugin -->
    <detectOfflineLinks>false</detectOfflineLinks>
    <maven.javadoc.skip>false</maven.javadoc.skip>
    <maven.javadoc.jar.skip>${maven.javadoc.skip}</maven.javadoc.jar.skip>
    <!-- too slow : http://jira.codehaus.org/browse/MJAVADOC-268 -->
    <quiet>true</quiet>
    <!-- maven-pmd-plugin -->
    <targetJdk>${maven.compiler.target}</targetJdk>
    <!-- These properties are automatically computed during the build -->
    <parsedVersion.majorVersion>N/A</parsedVersion.majorVersion>
    <!-- maven-war-plugin -->
    <useCache>true</useCache>
    <archiveClasses>false</archiveClasses>
    <maven.war.attachClasses>false</maven.war.attachClasses>
    <!-- Additional properties to activate the compression of already compressed archives - time expensive -->
    <maven.assembly.recompressZippedFiles>false</maven.assembly.recompressZippedFiles>
    <maven.war.recompressZippedFiles>false</maven.war.recompressZippedFiles>
    <!-- ************************ -->
    <!-- Sonar/Reporting settings -->
    <!-- ************************ -->
    <sonar.java.target>${maven.compiler.target}</sonar.java.target>
    <sonar.java.source>${maven.compiler.source}</sonar.java.source>
    <!-- Sonar/Jacoco integration. Note that these properties need to be defined outside the "coverage" profile
         because we want to be to able to execute mvn sonar:sonar without passing a profile -->
    <!-- Tells Sonar to use jacoco for coverage results -->
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->
    <sonar-jacoco-listeners.version>2.5</sonar-jacoco-listeners.version>
    <!-- The system property jacoco.outputDir needs to be override on the command line
         with an absolute path if you want to merge results from all modules.
         Example in a Jenkisn build where ${WORKSPACE} is defined and your project in the root directory of the workspace :
            mvn clean install -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target
         Note that unfortunately using the following does not work because of
         http://jira.codehaus.org/browse/SONAR-3427:
            <jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir>
    -->
    <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
    <!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->
    <sonar.jacoco.reportPath>${jacoco.outputDir}/jacoco.exec</sonar.jacoco.reportPath>
    <!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->
    <sonar.jacoco.itReportPath>${jacoco.outputDir}/jacoco-it.exec</sonar.jacoco.itReportPath>
    <!-- The listener used to compute coverage per test -->
    <!-- JUnit : org.sonar.java.jacoco.JUnitListener -->
    <!-- TestNG : org.sonar.java.jacoco.TestNGListener -->
    <jacoco.listener>org.sonar.java.jacoco.JUnitListener</jacoco.listener>
  </properties>
  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>${version.wagon}</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-file</artifactId>
        <version>${version.wagon}</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-http</artifactId>
        <version>${version.wagon}</version>
      </extension>
    </extensions>
    <pluginManagement>
      <!-- All plugins ordered by shortname (antrun, assembly ...) -->
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${version.antrun.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-archetype-plugin</artifactId>
          <version>${version.archetype.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>aspectj-maven-plugin</artifactId>
          <version>${version.aspectj.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${version.assembly.plugin}</version>
          <configuration>
            <!-- Perfs improvements - PAR-191 -->
            <useJvmChmod>true</useJvmChmod>
            <!-- Allow to activate/deactivate the recompression of zip files -->
            <recompressZippedFiles>${maven.assembly.recompressZippedFiles}</recompressZippedFiles>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${version.buildhelper.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${version.buildnumber.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>${version.cargo.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-changes-plugin</artifactId>
          <version>${version.changes.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${version.checkstyle.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${version.clean.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>clirr-maven-plugin</artifactId>
          <version>${version.clirr.plugin}</version>
          <configuration>
            <includes>
              <include>**/exoplatform/**</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.compiler.plugin}</version>
        </plugin>
        <plugin>
          <groupId>com.github.goldin</groupId>
          <artifactId>copy-maven-plugin</artifactId>
          <version>${version.copy.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${version.dependency.plugin}</version>
          <configuration>
            <!-- Perfs improvements - PAR-191 -->
            <useJvmChmod>true</useJvmChmod>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${version.deploy.plugin}</version>
        </plugin>
        <plugin>
          <groupId>com.agilejava.docbkx</groupId>
          <artifactId>docbkx-maven-plugin</artifactId>
          <version>${version.docbkx.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-docck-plugin</artifactId>
          <version>${version.docck.plugin}</version>
        </plugin>
        <plugin>
          <groupId>com.ning.maven.plugins</groupId>
          <artifactId>maven-duplicate-finder-plugin</artifactId>
          <version>${version.duplicate-finder.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ear-plugin</artifactId>
          <version>${version.ear.plugin}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Date>${maven.build.timestamp}</Date>
                <Implementation-URL>${project.url}</Implementation-URL>
                <SCM-URL>${project.scm.connection}</SCM-URL>
                <SCM-Revision>${buildNumber}</SCM-Revision>
                <Specification-Title>${exo.product.name}</Specification-Title>
                <Specification-Version>${parsedVersion.majorVersion}.0</Specification-Version>
                <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>${version.eclipse.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>${version.ejb.plugin}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Date>${maven.build.timestamp}</Date>
                <Implementation-URL>${project.url}</Implementation-URL>
                <SCM-URL>${project.scm.connection}</SCM-URL>
                <SCM-Revision>${buildNumber}</SCM-Revision>
                <Specification-Title>${exo.product.name}</Specification-Title>
                <Specification-Version>${parsedVersion.majorVersion}.0</Specification-Version>
                <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${version.enforcer.plugin}</version>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>extra-enforcer-rules</artifactId>
              <version>${extra-enforcer-rules.version}</version>
            </dependency>
            <dependency>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>animal-sniffer-enforcer-rule</artifactId>
              <version>${version.animal-sniffer.enforcer-rule}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${version.exec.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.exoplatform.maven.plugins</groupId>
          <artifactId>maven-exobuild-plugin</artifactId>
          <version>${version.exobuild.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.exoplatform.maven.plugins</groupId>
          <artifactId>maven-exopc-plugin</artifactId>
          <version>${version.exopc.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${version.failsafe.plugin}</version>
          <configuration>
            <systemPropertyVariables>
              <!-- To avoid conflicts on CI server - PAR-192 -->
              <!-- There is an incompatibility with Byteman - used in social -->
              <!-- <java.io.tmpdir>${project.build.directory}</java.io.tmpdir> -->
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${version.findbugs.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmaven</groupId>
          <artifactId>gmaven-plugin</artifactId>
          <version>${version.gmaven.plugin}</version>
          <configuration>
            <providerSelection>${gmaven-plugin.providerSelection}</providerSelection>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>${version.gmavenplus.plugin}</version>
          <configuration>
            <targetBytecode>${maven.compiler.target}</targetBytecode>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${version.gpg.plugin}</version>
          <configuration>
            <passphrase>${gpg.passphrase}</passphrase>
            <useAgent>${gpg.useagent}</useAgent>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>gwt-maven-plugin</artifactId>
          <version>${version.gwt.plugin}</version>
          <configuration>
            <!-- PAR-218 : Can't disable these unneeded artifacts, so compile them outside of the target WAR -->
            <deploy>${project.build.directory}/gwt-deploy</deploy>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-idea-plugin</artifactId>
          <version>${version.idea.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${version.install.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>${version.invoker.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${version.jacoco.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${version.jar.plugin}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Date>${maven.build.timestamp}</Date>
                <Implementation-URL>${project.url}</Implementation-URL>
                <SCM-URL>${project.scm.connection}</SCM-URL>
                <SCM-Revision>${buildNumber}</SCM-Revision>
                <Specification-Title>${exo.product.name}</Specification-Title>
                <Specification-Version>${parsedVersion.majorVersion}.0</Specification-Version>
                <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>javacc-maven-plugin</artifactId>
          <version>${version.javacc.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${version.javadoc.plugin}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Date>${maven.build.timestamp}</Date>
                <Implementation-URL>${project.url}</Implementation-URL>
                <SCM-URL>${project.scm.connection}</SCM-URL>
                <SCM-Revision>${buildNumber}</SCM-Revision>
                <Specification-Title>${exo.product.name}</Specification-Title>
                <Specification-Version>${parsedVersion.majorVersion}.0</Specification-Version>
                <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              </manifestEntries>
            </archive>
            <tags>
              <tag>
                <name>LevelAPI</name>
                <placement>a</placement>
                <head>eXo level API</head>
              </tag>
              <tag>
                <name>anchor</name>
                <placement>a</placement>
                <head>eXo anchor for generated doc on REST API</head>
              </tag>
              <tag>
                <name>request</name>
                <placement>a</placement>
                <head>eXo anchor for generated doc on REST API</head>
              </tag>
              <tag>
                <name>response</name>
                <placement>a</placement>
                <head>eXo response for generated doc on REST API</head>
              </tag>
              <tag>
                <name>format</name>
                <placement>a</placement>
                <head>eXo format for generated doc on REST API</head>
              </tag>
              <tag>
                <name>authentication</name>
                <placement>a</placement>
                <head>eXo authentication for generated doc on REST API</head>
              </tag>
              <tag>
                <name>notificationId</name>
                <placement>a</placement>
                <head>eXo notificationId for generated doc on REST API</head>
              </tag>
            </tags>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>javancss-maven-plugin</artifactId>
          <version>${version.javancss.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>jaxb2-maven-plugin</artifactId>
          <version>${version.jaxb2.plugin}</version>
        </plugin>
        <plugin>
          <groupId>com.jcabi</groupId>
          <artifactId>jcabi-maven-plugin</artifactId>
          <version>${version.jcabi.plugin}</version>
          <executions>
            <execution>
              <id>weave-classes</id>
              <phase>process-classes</phase>
              <goals>
                <goal>ajc</goal>
              </goals>
              <configuration>
                <classesDirectory>${project.build.outputDirectory}</classesDirectory>
              </configuration>
            </execution>
            <execution>
              <id>weave-test-classes</id>
              <phase>process-test-classes</phase>
              <goals>
                <goal>ajc</goal>
              </goals>
              <configuration>
                <classesDirectory>${project.build.testOutputDirectory}</classesDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>jdepend-maven-plugin</artifactId>
          <version>${version.jdepend.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.jboss.maven.plugins</groupId>
          <artifactId>maven-jdocbook-plugin</artifactId>
          <version>${version.jdocbook.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.jibx</groupId>
          <artifactId>maven-jibx-plugin</artifactId>
          <version>${version.jibx.plugin}</version>
        </plugin>
        <plugin>
          <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-maven-plugin</artifactId>
          <version>${version.jmeter.plugin}</version>
        </plugin>
        <plugin>
          <groupId>com.artofsolving</groupId>
          <artifactId>jodconverter-maven-plugin</artifactId>
          <version>${version.jodconverter.plugin}</version>
        </plugin>
        <plugin>
          <groupId>gr.abiss.mvn.plugins</groupId>
          <artifactId>maven-jstools-plugin</artifactId>
          <version>${version.jstools.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>${version.jxr.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.lesscss</groupId>
          <artifactId>lesscss-maven-plugin</artifactId>
          <version>${version.lesscss.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${version.license.plugin}</version>
        </plugin>
        <!-- It should be merged in the mojo plugin -->
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${version.mycila-license.plugin}</version>
          <!-- Add a dependency since this is where the maven-license-plugin plugin will find the license-header.txt file -->
          <dependencies>
            <dependency>
              <groupId>org.exoplatform.resources</groupId>
              <artifactId>exo-lgpl-license-resource-bundle</artifactId>
              <version>${version.exo-lgpl-license-resource-bundle}</version>
            </dependency>
          </dependencies>
          <configuration>
            <header>org/exoplatform/resources/license-header.txt</header>
            <properties>
              <!-- Values to be substituted in template -->
              <h_inceptionYear>${project.inceptionYear}</h_inceptionYear>
              <h_currentYear>${currentYear}</h_currentYear>
              <h_copyrightOwner>${project.organization.name}</h_copyrightOwner>
            </properties>
            <failIfMissing>false</failIfMissing>
            <strictCheck>true</strictCheck>
            <!-- Our Java isn't the default so we need to change the mapping (We use /* and not /**) -->
            <headerDefinitions>
              <headerDefinition>org/exoplatform/resources/javadoc_style.xml</headerDefinition>
            </headerDefinitions>
            <!-- We're only interested in checking our sources and our POMs -->
            <includes>
              <include>src/**</include>
              <include>pom.xml</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-maven-plugin</artifactId>
          <version>${version.plexus.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${version.plugin.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${version.pmd.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-rar-plugin</artifactId>
          <version>${version.rar.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${version.release.plugin}</version>
          <configuration>
            <!-- maven-release-plugin -->
            <goals>deploy</goals>
            <useReleaseProfile>false</useReleaseProfile>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <arguments>-Pexo-release ${arguments}</arguments>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-remote-resources-plugin</artifactId>
          <version>${version.remote-resources.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.shared</groupId>
              <artifactId>maven-shared-jar</artifactId>
              <version>${version.project-info-reports-shade.plugin}</version>
              <exclusions>
                <exclusion>
                  <artifactId>bcel</artifactId>
                  <groupId>org.apache.bcel</groupId>
                </exclusion>
              </exclusions>
            </dependency>
            <dependency>
              <groupId>com.google.code.findbugs</groupId>
              <artifactId>bcel-findbugs</artifactId>
              <version>${version.project-info-reports-bcel-findbugs.plugin}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${version.resources.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>selenium-maven-plugin</artifactId>
          <version>${version.selenium.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${version.site.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${version.shade.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.sonar-plugins</groupId>
          <artifactId>maven-report</artifactId>
          <version>${version.sonar-maven-report.plugin}</version>
        </plugin>
        <plugin>
          <groupId>com.google.code.sortpom</groupId>
          <artifactId>maven-sortpom-plugin</artifactId>
          <version>${version.sortpom.plugin}</version>
          <configuration>
            <expandEmptyElements>false</expandEmptyElements>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${version.source.plugin}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Date>${maven.build.timestamp}</Date>
                <Implementation-URL>${project.url}</Implementation-URL>
                <SCM-URL>${project.scm.connection}</SCM-URL>
                <SCM-Revision>${buildNumber}</SCM-Revision>
                <Specification-Title>${exo.product.name}</Specification-Title>
                <Specification-Version>${parsedVersion.majorVersion}.0</Specification-Version>
                <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.surefire.plugin}</version>
          <configuration>
            <systemPropertyVariables>
              <!-- To avoid conflicts on CI server - PAR-192 -->
              <!-- There is an incompatibility with Byteman - used in social -->
              <!-- <java.io.tmpdir>${project.build.directory}</java.io.tmpdir> -->
              <!-- PAR-226 : Generate tests data inside target dir -->
              <com.arjuna.ats.arjuna.objectstore.objectStoreDir>${project.build.directory}</com.arjuna.ats.arjuna.objectstore.objectStoreDir>
              <ObjectStoreEnvironmentBean.objectStoreDir>${project.build.directory}</ObjectStoreEnvironmentBean.objectStoreDir>
              <gatein.test.tmp.dir>${project.build.directory}</gatein.test.tmp.dir>
              <gatein.test.output.path>${project.build.directory}</gatein.test.output.path>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${version.surefire.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>${version.tomcat7.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${version.versions.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${version.war.plugin}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Date>${maven.build.timestamp}</Date>
                <Implementation-URL>${project.url}</Implementation-URL>
                <SCM-URL>${project.scm.connection}</SCM-URL>
                <SCM-Revision>${buildNumber}</SCM-Revision>
                <Specification-Title>${exo.product.name}</Specification-Title>
                <Specification-Version>${parsedVersion.majorVersion}.0</Specification-Version>
                <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              </manifestEntries>
            </archive>
            <!-- PAR-145 : Be sure that all product package all their classes in JAR (No stand alone classes in WEB-INF/classes) -->
            <archiveClasses>${archiveClasses}</archiveClasses>
            <attachClasses>${maven.war.attachClasses}</attachClasses>
            <useCache>${useCache}</useCache>
            <!-- Allow to activate/deactivate the recompression of zip files -->
            <recompressZippedFiles>${maven.war.recompressZippedFiles}</recompressZippedFiles>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.wikbook</groupId>
          <artifactId>wikbook.maven</artifactId>
          <version>${version.wikbook.plugin}</version>
          <dependencies>
            <dependency>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-simple</artifactId>
              <version>1.5.8</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.wikbook</groupId>
          <artifactId>wikbook.html2pdf</artifactId>
          <version>${version.wikbook.plugin}</version>
          <dependencies>
            <dependency>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-simple</artifactId>
              <version>1.5.8</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xml-maven-plugin</artifactId>
          <version>${version.xml.plugin}</version>
        </plugin>
        <plugin>
          <groupId>net.sf.alchim</groupId>
          <artifactId>yuicompressor-maven-plugin</artifactId>
          <version>${version.yuicompressor.plugin}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>parse-version</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>create</goal>
            </goals>
            <configuration>
              <buildNumberPropertyName>buildNumber</buildNumberPropertyName>
              <revisionOnScmFailure>no_revision</revisionOnScmFailure>
              <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
              <timestampFormat>{0, date,yyyyMMdd}</timestampFormat>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${version.project-info-reports.plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${version.dependency.plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${version.javadoc.plugin}</version>
        <reportSets>
          <reportSet>
            <id>aggregate</id>
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${version.jxr.plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>${version.taglist.plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${version.versions.plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>clirr-maven-plugin</artifactId>
        <version>${version.clirr.plugin}</version>
        <configuration>
          <includes>
            <include>**/exoplatform/**</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>${version.changes.plugin}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>jira-report</report>
            </reports>
          </reportSet>
        </reportSets>
        <configuration>
          <useJql>true</useJql>
          <maxEntries>1000</maxEntries>
          <runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
          <onlyCurrentVersion>true</onlyCurrentVersion>
          <statusIds>Resolved,Closed,Done</statusIds>
          <resolutionIds>Fixed,Won't Fix,Duplicate,Incomplete,Cannot Reproduce,Workaround,Normal Behavior,Done</resolutionIds>
          <columnNames>Priority,Type,Key,Summary,Component,Status,Resolution,Fix Version</columnNames>
          <sortColumnNames>Fix Version DESC,Type DESC,Priority DESC</sortColumnNames>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.sonar-plugins</groupId>
        <artifactId>maven-report</artifactId>
        <version>${version.sonar-maven-report.plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${version.surefire.plugin}</version>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <id>enforce</id>
      <activation>
        <property>
          <name>!skip-enforce</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-java-version</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <message>To build this project JDK ${jdk.min.version} (or upper) is required. Please install it.</message>
                      <version>${jdk.min.version}</version>
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
              <execution>
                <id>enforce-maven-version</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireMavenVersion>
                      <message>To build this project Maven ${maven.min.version} (or upper) is required. Please install it.</message>
                      <version>${maven.min.version}</version>
                    </requireMavenVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>sources</id>
      <activation>
        <property>
          <name>!skip-sources</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
            <inherited>true</inherited>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- This profile is activated when a project is released. -->
    <profile>
      <id>exo-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-plugin-versions</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requirePluginVersions>
                      <message>Best practice is to always define plugin versions! Plugins must be released released (no SNAPSHOT) and without using keywords RELEASE or LATEST!</message>
                      <banLatest>true</banLatest>
                      <banRelease>true</banRelease>
                      <banSnapshots>${exo.release.enforce.requirePluginVersions.banSnapshots}</banSnapshots>
                    </requirePluginVersions>
                  </rules>
                </configuration>
              </execution>
              <execution>
                <id>check-java-compat</id>
                <!-- PAR-361: Rollback, because CheckSignatureRule always failed for 3rd party libraries
                <phase>process-classes</phase>
                -->
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <checkSignatureRule implementation="org.codehaus.mojo.animal_sniffer.enforcer.CheckSignatureRule">
                      <signature>
                        <groupId>${animal-sniffer.signature.groupId}</groupId>
                        <artifactId>${animal-sniffer.signature.artifactId}</artifactId>
                        <version>${animal-sniffer.signature.version}</version>
                      </signature>
                    </checkSignatureRule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!--
            Generates Javadoc
           -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs-single</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <skip>${maven.javadoc.jar.skip}</skip>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Create a source-release artifact that contains the fully buildable
               project directory source structure. This is the artifact which is
               the official subject of any release vote. -->
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>source-release-assembly</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
                  <descriptorRefs>
                    <descriptorRef>source-release</descriptorRef>
                  </descriptorRefs>
                  <tarLongFileMode>gnu</tarLongFileMode>
                  <appendAssemblyId>true</appendAssemblyId>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.apache.apache.resources</groupId>
                <artifactId>apache-source-release-assembly-descriptor</artifactId>
                <version>${version.apache-source-release-assembly-descriptor}</version>
              </dependency>
            </dependencies>
          </plugin>
          <!-- We want to sign the artifact, the POM, and all attached artifacts -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Validate wellformedness of (almost) all XML files -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>xml-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>validate-xml-files</id>
                <goals>
                  <goal>validate</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <validationSets>
                <validationSet>
                  <dir>src/main/resources</dir>
                  <includes>
                    <include>**/*.xml</include>
                  </includes>
                </validationSet>
              </validationSets>
            </configuration>
          </plugin>
          <!-- Creating current year element -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>compute-year</id>
                <goals>
                  <goal>timestamp-property</goal>
                </goals>
                <configuration>
                  <locale>en,US</locale>
                  <name>currentYear</name>
                  <pattern>yyyy</pattern>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Adding header to file -->
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>check-headers</id>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <!-- Additional properties to activate the compression of already compressed archives - time expensive -->
        <maven.assembly.recompressZippedFiles>true</maven.assembly.recompressZippedFiles>
        <maven.war.recompressZippedFiles>true</maven.war.recompressZippedFiles>
        <!-- GWT optimizations -->
        <gwt.draftCompile>false</gwt.draftCompile>
        <gwt.compiler.optimizationLevel>9</gwt.compiler.optimizationLevel>
        <gwt.compiler.disableAggressiveOptimization>false</gwt.compiler.disableAggressiveOptimization>
        <gwt.style>OBF</gwt.style>
      </properties>
    </profile>
    <!--
    This profile is used to launch integration tests with the failsafe plugin
    http://maven.apache.org/plugins/maven-failsafe-plugin/
     -->
    <profile>
      <id>run-its</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>integration-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
              <execution>
                <id>verify</id>
                <phase>verify</phase>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!--
    This profile executes tests coverage for UTs and ITs with Jacoco.
    -->
    <profile>
      <id>coverage</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <configuration>
                <!-- Specific to generate mapping between tests and covered code -->
                <properties>
                  <property>
                    <name>listener</name>
                    <value>${jacoco.listener}</value>
                  </property>
                </properties>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <!-- Specific to generate mapping between tests and covered code -->
                <properties>
                  <property>
                    <name>listener</name>
                    <value>${jacoco.listener}</value>
                  </property>
                </properties>
                <!-- Let's put failsafe reports with surefire to have access to tests failures/success reports in sonar -->
                <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${version.jacoco.plugin}</version>
            <executions>
              <execution>
                <id>prepare-ut-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${sonar.jacoco.reportPath}</destFile>
                  <append>true</append>
                </configuration>
              </execution>
              <execution>
                <id>prepare-it-agent</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
                <configuration>
                  <destFile>${sonar.jacoco.itReportPath}</destFile>
                  <append>true</append>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-jacoco-listeners</artifactId>
          <version>${sonar-jacoco-listeners.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${version.jacoco.plugin}</version>
            <reportSets>
              <reportSet>
                <id>default-report</id>
                <reports>
                  <report>report</report>
                </reports>
                <configuration>
                  <dataFile>${sonar.jacoco.reportPath}</dataFile>
                </configuration>
              </reportSet>
              <reportSet>
                <id>default-report-integration</id>
                <reports>
                  <report>report-integration</report>
                </reports>
                <configuration>
                  <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                </configuration>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <!--
     Checks backward compatibility is maintained
     -->
    <profile>
      <id>chk-backward-comp</id>
      <build>
        <defaultGoal>clirr:check</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>clirr-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
      <properties>
        <failOnError>false</failOnError>
      </properties>
    </profile>
    <!--
     Reformat POMs
     -->
    <profile>
      <id>format-pom</id>
      <build>
        <defaultGoal>sortpom:sort</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.google.code.sortpom</groupId>
            <artifactId>maven-sortpom-plugin</artifactId>
            <configuration>
              <createBackupFile>false</createBackupFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!--
     Sort Dependencies - Maven reads dependencies according to the order in the pom-file when compiling. Rearranging the order may affect the compilation output.
     -->
    <profile>
      <id>sort-deps</id>
      <build>
        <defaultGoal>sortpom:sort</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.google.code.sortpom</groupId>
            <artifactId>maven-sortpom-plugin</artifactId>
            <configuration>
              <createBackupFile>false</createBackupFile>
              <sortDependencies>scope,groupId,artifactId</sortDependencies>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!--
     Sort DependencyManagement - Maven reads dependencies according to the order in the pom-file when compiling. Rearranging the order may affect the compilation output.
     To use only in a POM with depMgt entries
     -->
    <profile>
      <id>sort-depsMgt</id>
      <build>
        <defaultGoal>sortpom:sort</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.google.code.sortpom</groupId>
            <artifactId>maven-sortpom-plugin</artifactId>
            <configuration>
              <createBackupFile>false</createBackupFile>
              <sortDependencies>groupId,artifactId</sortDependencies>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!--
     Controls dependencies
    -->
    <profile>
      <id>verify-deps</id>
      <build>
        <defaultGoal>dependency:analyze dependency:analyze-dep-mgt dependency:analyze-duplicate</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <configuration>
              <outputXML>true</outputXML>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>maven-site-descriptor</id>
      <activation>
        <file>
          <!--  This employs that the basedir expression is only recognized by Maven 3.x (see MNG-2363) -->
          <exists>${basedir}</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <!-- if releasing current pom with Maven 3, site descriptor must be attached -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-descriptor</id>
                <goals>
                  <goal>attach-descriptor</goal>
                </goals>
              </execution>
            </executions>
            <inherited>false</inherited>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>fix-javadocs</id>
      <build>
        <defaultGoal>javadoc:fix</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>clirr-maven-plugin</artifactId>
                <version>${version.clirr.plugin}</version>
              </dependency>
            </dependencies>
            <configuration>
              <defaultAuthor>${project.organization.name}</defaultAuthor>
              <defaultVersion />
              <fixTags>author,since,param,return,throws,link</fixTags>
              <level>private</level>
              <force>true</force>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>fix-headers</id>
      <build>
        <defaultGoal>validate</defaultGoal>
        <plugins>
          <!-- Creating current year element -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>compute-year</id>
                <goals>
                  <goal>timestamp-property</goal>
                </goals>
                <configuration>
                  <locale>en,US</locale>
                  <name>currentYear</name>
                  <pattern>yyyy</pattern>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Adding header to file -->
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>format-headers</id>
                <phase>validate</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>check-headers</id>
      <build>
        <defaultGoal>validate</defaultGoal>
        <plugins>
          <!-- Creating current year element -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>compute-year</id>
                <goals>
                  <goal>timestamp-property</goal>
                </goals>
                <configuration>
                  <locale>en,US</locale>
                  <name>currentYear</name>
                  <pattern>yyyy</pattern>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Adding header to file -->
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>check-headers</id>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>project-repositories</id>
      <activation>
        <property>
          <name>!skip-project-repositories</name>
        </property>
      </activation>
      <repositories>
        <repository>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <id>repository.exoplatform.org</id>
          <url>https://repository.exoplatform.org/public</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <id>repository.exoplatform.org</id>
          <url>https://repository.exoplatform.org/public</url>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>
</project>
